<% @page_title = @topic.title_squeezed %>

<% modal(title: 'Topic Actions') do %>
  <% if user_signed_in? %>
    <%= react_component('TopicActions',
      topicID: @topic.id,
      currentUserID: current_user&.id,
      currentAdmin: current_admin?,
      authenticity_token: form_authenticity_token,
      isLocked: @topic.locked?,

      nudge: {
        nudgeEndpoint: api_nudge_topic_path,
      },

      lock: {
        lockEndpoint: api_lock_topic_path,
        unlockEndpoint: api_unlock_topic_path,
      },

      destroy: {
        destroyEndpoint: api_destroy_topic_path(@topic.id),
      }
    ) %>
  <% end %>
<% end %>

<% if @topic.club %>
  <div class="notification is-<%= color_for(@topic) %>">
    <span>
      This topic is in a club:
    </span>

    <%= link_to @topic.club do %>
      <strong>
        <%= @topic.club.title %>
      </strong>
    <% end %>
  </div>
<% end %>

<div class="topic-header level notification is-<%= color_for(@topic) %>">
  <div class="level-left">
    <div>
      <p class="title">
        <%= @topic.title %>
      </p>

      <p class="subtitle">
        <%= @topic.reading_time(format: :approx) %> reading time
      </p>
    </div>
  </div>

  <% if user_signed_in? %>
    <div class="level-right">
      <span class="icon" data-modal="toggle">
        <%= fa 'bars fa-lg' %>
      </span>
    </div>
  <% end %>
</div>

<%= react_component('PostList',
  topicID: @topic.id,
  posts: @posts_json,
  canPost: can_post?(@topic),
  topicColor: color_for(@topic),

  currentUsername: current_username,
  currentUserID: current_user&.id,
  currentAdmin: current_admin?,

  newPostEndpoint: api_new_post_path,
  editPostEndpoint: api_edit_post_path,
  authenticity_token: form_authenticity_token,
) %>